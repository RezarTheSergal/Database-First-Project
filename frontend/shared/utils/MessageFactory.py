from typing import Any
from backend.utils.responce_types import DatabaseResponse, ResponseStatus
from frontend.shared.ui import PromptBox
from PySide6.QtWidgets import QMessageBox


class MessageFactory:
    """–§–∞–±—Ä–∏–∫–∞ –¥–ª—è –ø–æ–∫–∞–∑–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é"""

    @staticmethod
    def show(
        response: DatabaseResponse | None, is_modal: bool = False
    ) -> bool:
        """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Å—Ç–∞—Ç—É—Å–∞ –æ—Ç–≤–µ—Ç–∞ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ç–∏–ø —Å–æ–æ–±—â–µ–Ω–∏—è - –º–æ–¥–∞–ª—å–Ω–æ–µ –∏–ª–∏ –Ω–µ—Ç"""
        if not response:
            MessageFactory._show_error("–ù–µ—Ç –æ—Ç–≤–µ—Ç–∞")
            return True
        elif response.status == ResponseStatus.ERROR:
            MessageFactory._show_error(response)
            return True
        elif response.status == ResponseStatus.WARNING:
            MessageFactory._show_warning(response)
            return False
        elif response.status == ResponseStatus.SUCCESS and not is_modal:
            MessageFactory._show_success(response)
            return False
        else:
            return False

    @staticmethod
    def _show_error(response: Any) -> None:
        """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ"""
        error_details = ""
        if response.error_details:
            details_str = "\n".join([f"{k}: {v}" for k, v in response.error_details.items()])
            error_details = f"\n\n–î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏:\n{details_str}"

        msg = PromptBox()
        msg.setIcon(PromptBox.Icon.Critical)
        msg.setWindowTitle("–û—à–∏–±–∫–∞")
        msg.setText(f"{response.message}")
        msg.setStandardButtons(QMessageBox.StandardButton.Yes)
        msg.button(QMessageBox.StandardButton.Yes).setText("–ö—Ä—É—Ç–æ!üî•üî•üî•")
        if response.error_code:
            msg.setInformativeText(f"–ö–æ–¥ –æ—à–∏–±–∫–∏: {response.error_code.value}{error_details}")
        else:
            msg.setInformativeText(f"–ö–æ–¥ –æ—à–∏–±–∫–∏: –Ω–µ–∏–∑–≤–µ—Å—Ç–µ–Ω{error_details}")
        msg.exec()

    @staticmethod
    def _show_warning(response: Any):
        """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ"""
        msg = PromptBox()
        msg.setIcon(PromptBox.Icon.Warning)
        msg.setWindowTitle("–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ")
        msg.setText(response.message)
        msg.exec()

    @staticmethod
    def _show_success(response: Any):
        """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—Ö–µ (—Ç–æ–ª—å–∫–æ –¥–ª—è –º–æ–¥–∞–ª—å–Ω—ã—Ö –æ–∫–æ–Ω)"""
        msg = PromptBox()
        msg.setIcon(PromptBox.Icon.Information)
        msg.setWindowTitle("–£—Å–ø–µ—Ö")
        msg.setText("–û–ø–µ—Ä–∞—Ü–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
        if response.message and response.message != "–û–ø–µ—Ä–∞—Ü–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ":
            msg.setInformativeText(response.message)
        msg.exec()
